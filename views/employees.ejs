<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>
    </title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .navbar {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand {
            font-weight: 600;
            font-size: 1.5rem;
        }

        .page-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            margin-bottom: 2rem;
            overflow: hidden;
        }

        .page-header-content {
            padding: 2rem;
        }

        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        }

        .table {
            margin: 0;
        }

        .table th {
            border-top: none;
            border-bottom: 2px solid #dee2e6;
            font-weight: 600;
            color: #495057;
            padding: 1rem 0.75rem;
        }

        .table td {
            padding: 1rem 0.75rem;
            vertical-align: middle;
            border-top: 1px solid #f8f9fa;
        }

        .employee-row {
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        .employee-row:hover {
            background-color: #f8f9fa;
        }

        .leave-badge {
            font-size: 0.85rem;
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
        }

        .leave-progress {
            height: 8px;
            border-radius: 10px;
            overflow: hidden;
            background-color: #e9ecef;
        }

        .leave-progress-bar {
            height: 100%;
            border-radius: 10px;
            transition: width 0.3s ease;
        }

        .btn-action {
            padding: 0.375rem 0.75rem;
            border-radius: 8px;
            font-size: 0.875rem;
            margin: 0 0.25rem;
        }

        .modal-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-bottom: none;
        }

        .modal-content {
            border: none;
            border-radius: 15px;
            overflow: hidden;
        }

        .form-control,
        .form-select {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 0.75rem;
            transition: border-color 0.3s ease;
        }

        .form-control:focus,
        .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

        .floating-action-buttons {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            z-index: 1000;
        }

        .fab {
            width: 56px;
            height: 56px;
            border-radius: 50%;
            border: none;
            color: white;
            font-size: 1.2rem;
            margin: 0.5rem 0;
            display: block;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .fab:hover {
            transform: scale(1.1);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        }

        .fab-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .alert {
            border: none;
            border-radius: 10px;
        }

        .avatar-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
        }
    </style>
</head>

<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand" href="/dashboard">
                <i class="fas fa-briefcase me-2"></i>
                HR Leave Management
            </a>

            <div class="navbar-nav ms-auto">
                <div class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                        <i class="fas fa-user me-1"></i>
                        <%= user.username %>
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/dashboard"><i
                                    class="fas fa-tachometer-alt me-2"></i>Dashboard</a></li>
                        <li><a class="dropdown-item" href="#"><i class="fas fa-user-edit me-2"></i>Profile</a></li>
                        <li>
                            <hr class="dropdown-divider">
                        </li>
                        <li><a class="dropdown-item" href="/logout"><i class="fas fa-sign-out-alt me-2"></i>Logout</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container mt-4">
        <!-- Page Header -->
        <div class="page-header">
            <div class="page-header-content">
                <div class="row align-items-center">
                    <div class="col-md-8">
                        <h1 class="mb-2">
                            <i class="fas fa-users me-3"></i>
                            Employee Management
                        </h1>
                        <p class="mb-0 opacity-75">
                            Manage employee information and leave allocations
                        </p>
                    </div>
                    <div class="col-md-4 text-end">
                        <i class="fas fa-users-cog" style="font-size: 4rem; opacity: 0.3;"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Error/Success Alerts -->
        <% if (typeof error !=='undefined' && error) { %>
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                <%= error %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
            <% } %>

                <!-- Action Buttons -->
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body p-3">
                                <div class="row align-items-center">
                                    <div class="col-md-6">
                                        <h5 class="mb-0">
                                            <i class="fas fa-clipboard-list me-2 text-primary"></i>
                                            Employee List (<%= employees.length %> employees)
                                        </h5>
                                    </div>
                                    <div class="col-md-6 text-end">
                                        <button class="btn btn-outline-primary btn-action" onclick="importEmployees()">
                                            <i class="fas fa-upload me-1"></i>Import
                                        </button>
                                        <a href="/dashboard/download-template" class="btn btn-outline-info btn-action">
                                            <i class="fas fa-download me-1"></i>Template
                                        </a>
                                        <a href="/dashboard/export-employees"
                                            class="btn btn-outline-success btn-action">
                                            <i class="fas fa-file-excel me-1"></i>Export
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Employees Table -->
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body p-0">
                                <% if (employees.length===0) { %>
                                    <div class="text-center py-5">
                                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                                        <h5 class="text-muted">No employees found</h5>
                                        <p class="text-muted">Import employees or add them manually to get started.</p>
                                        <button class="btn btn-primary" onclick="importEmployees()">
                                            <i class="fas fa-plus me-2"></i>Add Employees
                                        </button>
                                    </div>
                                    <% } else { %>
                                        <div class="table-responsive">
                                            <table class="table table-hover">
                                                <thead>
                                                    <tr>
                                                        <th><i class="fas fa-user me-2"></i>Name</th>
                                                        <th><i class="fas fa-building me-2"></i>Department</th>
                                                        <th><i class="fas fa-calendar me-2"></i>Total Leaves</th>
                                                        <th><i class="fas fa-check-circle me-2"></i>Available</th>
                                                        <th><i class="fas fa-times-circle me-2"></i>Used</th>
                                                        <th><i class="fas fa-chart-bar me-2"></i>Usage</th>
                                                        <th><i class="fas fa-cogs me-2"></i>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <% employees.forEach(function(employee) { %>
                                                        <% var usedLeaves=employee.total_leaves -
                                                            employee.available_leaves; var
                                                            usagePercentage=Math.round((usedLeaves /
                                                            employee.total_leaves) * 100); var
                                                            progressColor=usagePercentage> 80 ? 'danger' :
                                                            usagePercentage > 60 ? 'warning' : 'success';
                                                            %>
                                                            <tr class="employee-row"
                                                                onclick="viewEmployeeDetails(<%= employee.id %>)"
                                                                title="Click to view leave details">
                                                                <td>
                                                                    <div class="d-flex align-items-center">
                                                                        <div class="avatar-circle me-3">
                                                                            <%= employee.name.charAt(0).toUpperCase() %>
                                                                        </div>
                                                                        <div>
                                                                            <div class="fw-bold">
                                                                                <%= employee.name %>
                                                                            </div>
                                                                            <small class="text-muted">ID: <%=
                                                                                    employee.id %></small>
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    <span class="badge bg-light text-dark">
                                                                        <%= employee.department %>
                                                                    </span>
                                                                </td>
                                                                <td>
                                                                    <span class="fw-bold text-primary">
                                                                        <%= employee.total_leaves %>
                                                                    </span>
                                                                </td>
                                                                <td>
                                                                    <span class="leave-badge bg-success text-white">
                                                                        <%= employee.available_leaves %>
                                                                    </span>
                                                                </td>
                                                                <td>
                                                                    <span
                                                                        class="leave-badge bg-<%= progressColor %> text-white">
                                                                        <%= usedLeaves %>
                                                                    </span>
                                                                </td>
                                                                <td>
                                                                    <div class="leave-progress mb-1">
                                                                        <div class="leave-progress-bar bg-<%= progressColor %>"
                                                                            style="width: <%= usagePercentage %>%">
                                                                        </div>
                                                                    </div>
                                                                    <small class="text-muted">
                                                                        <%= usagePercentage %>% used
                                                                    </small>
                                                                </td>
                                                                <td>
                                                                    <button class="btn btn-sm btn-primary"
                                                                        onclick="event.stopPropagation(); addLeave(<%= employee.id %>, '<%= employee.name %>', <%= employee.available_leaves %>)"
                                                                        <% if (employee.available_leaves <=0) {
                                                                        %>disabled<% } %>
                                                                            title="Add Leave">
                                                                            <i class="fas fa-plus"></i>
                                                                    </button>
                                                                    <button class="btn btn-sm btn-info"
                                                                        onclick="event.stopPropagation(); viewEmployeeDetails(<%= employee.id %>)"
                                                                        title="View Details">
                                                                        <i class="fas fa-eye"></i>
                                                                    </button>
                                                                    <button class="btn btn-sm btn-danger"
                                                                        onclick="event.stopPropagation(); deleteEmployee(<%= employee.id %>, '<%= employee.name %>')"
                                                                        title="Delete Employee">
                                                                        <i class="fas fa-trash"></i>
                                                                    </button>
                                                                </td>
                                                            </tr>
                                                            <% }); %>
                                                </tbody>
                                            </table>
                                        </div>
                                        <% } %>
                            </div>
                        </div>
                    </div>
                </div>
    </div>

    <!-- Floating Action Buttons -->
    <div class="floating-action-buttons">
        <button class="fab fab-primary" onclick="importEmployees()" title="Import Employees">
            <i class="fas fa-upload"></i>
        </button>
    </div>

    <!-- Add Leave Modal -->
    <div class="modal fade" id="addLeaveModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-calendar-plus me-2"></i>
                        Add Leave Request
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addLeaveForm">
                        <input type="hidden" id="employeeId" name="employee_id">

                        <div class="mb-3">
                            <label for="employeeName" class="form-label">Employee</label>
                            <input type="text" class="form-control" id="employeeName" readonly>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="startDate" class="form-label">Start Date</label>
                                <input type="date" class="form-control" id="startDate" name="start_date" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="endDate" class="form-label">End Date</label>
                                <input type="date" class="form-control" id="endDate" name="end_date" required>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="days" class="form-label">Number of Days</label>
                            <input type="number" class="form-control" id="days" name="days" min="1" required>
                            <small class="text-muted" id="availableLeaves"></small>
                        </div>

                        <div class="mb-3">
                            <label for="reason" class="form-label">Reason</label>
                            <select class="form-select" id="reason" name="reason" required>
                                <option value="">Select a reason</option>
                                <!-- Options will be loaded dynamically -->
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="submitLeave()">
                        <i class="fas fa-check me-2"></i>Add Leave
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Employee Details Modal -->
    <div class="modal fade" id="employeeDetailsModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-user-circle me-2"></i>
                        Employee Leave Details
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="employeeDetailsContent">
                        <!-- Employee details will be loaded here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- File Import Modal -->
    <div class="modal fade" id="importModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-file-import me-2"></i>
                        Import Employees
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="importForm" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="employeeFile" class="form-label">Select File</label>
                            <input type="file" class="form-control" id="employeeFile" name="employeeFile"
                                accept=".csv,.xlsx,.xls" required>
                            <small class="text-muted">
                                Supported formats: CSV, Excel (.xlsx, .xls) - Max size: 5MB
                            </small>
                        </div>

                        <div class="alert alert-info">
                            <h6><i class="fas fa-info-circle me-2"></i>File Format Requirements:</h6>
                            <p class="mb-2">Your file should contain the following columns:</p>
                            <ul class="mb-0">
                                <li><strong>name</strong> - Employee full name</li>
                                <li><strong>department</strong> - Department name</li>
                                <li><strong>total_leaves</strong> - Total annual leave days (number)</li>
                                <li><strong>available_leaves</strong> - Currently available leave days (number)</li>
                            </ul>
                        </div>

                        <div class="text-center">
                            <a href="/dashboard/download-template" class="btn btn-outline-primary">
                                <i class="fas fa-download me-2"></i>Download Template
                            </a>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="processImport()" id="importBtn">
                        <i class="fas fa-upload me-2"></i>Import
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Employee Confirmation Modal -->
    <div class="modal fade" id="deleteEmployeeModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Confirm Delete Employee
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="text-center mb-3">
                        <i class="fas fa-user-times fa-3x text-danger mb-3"></i>
                        <h5>Are you sure you want to delete this employee?</h5>
                    </div>

                    <div class="alert alert-warning">
                        <h6><i class="fas fa-warning me-2"></i>Warning:</h6>
                        <ul class="mb-0">
                            <li>This action cannot be undone</li>
                            <li>All leave records for this employee will also be deleted</li>
                            <li>Employee data will be permanently removed from the system</li>
                        </ul>
                    </div>

                    <div class="border rounded p-3 bg-light">
                        <strong>Employee to delete:</strong><br>
                        <span id="deleteEmployeeName" class="fw-bold text-danger"></span><br>
                        <small class="text-muted">ID: <span id="deleteEmployeeId"></span></small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                    <button type="button" class="btn btn-danger" onclick="confirmDeleteEmployee()"
                        id="confirmDeleteBtn">
                        <i class="fas fa-trash me-2"></i>Delete Employee
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        // Add Leave Modal Functions
        function addLeave(employeeId, employeeName, availableLeaves) {
            document.getElementById('employeeId').value = employeeId;
            document.getElementById('employeeName').value = employeeName;
            document.getElementById('availableLeaves').textContent = 'Available leaves: ' + availableLeaves + ' days';

            // Reset form
            document.getElementById('addLeaveForm').reset();
            document.getElementById('employeeId').value = employeeId;
            document.getElementById('employeeName').value = employeeName;

            // Set minimum date to today
            var today = new Date().toISOString().split('T')[0];
            document.getElementById('startDate').min = today;
            document.getElementById('endDate').min = today;

            // Load leave reasons
            loadLeaveReasons();

            new bootstrap.Modal(document.getElementById('addLeaveModal')).show();
        }

        // Load leave reasons from server
        async function loadLeaveReasons() {
            try {
                var response = await fetch('/dashboard/leave-reasons');
                var data = await response.json();

                if (data.success) {
                    var reasonSelect = document.getElementById('reason');
                    reasonSelect.innerHTML = '<option value="">Select a reason</option>';

                    data.reasons.forEach(function (reason) {
                        var option = document.createElement('option');
                        option.value = reason;
                        option.textContent = reason;
                        reasonSelect.appendChild(option);
                    });
                } else {
                    console.error('Failed to load leave reasons');
                    // Fallback to default options
                    setDefaultReasons();
                }
            } catch (error) {
                console.error('Error loading leave reasons:', error);
                setDefaultReasons();
            }
        }

        // Set default reasons if loading fails
        function setDefaultReasons() {
            var reasonSelect = document.getElementById('reason');
            var defaultReasons = ['Personal', 'Medical', 'Vacation', 'Emergency', 'Family', 'Sick Leave', 'Other'];

            reasonSelect.innerHTML = '<option value="">Select a reason</option>';
            defaultReasons.forEach(function (reason) {
                var option = document.createElement('option');
                option.value = reason;
                option.textContent = reason;
                reasonSelect.appendChild(option);
            });
        }

        // Calculate days when dates change
        document.getElementById('startDate').addEventListener('change', calculateDays);
        document.getElementById('endDate').addEventListener('change', calculateDays);

        function calculateDays() {
            var startDate = new Date(document.getElementById('startDate').value);
            var endDate = new Date(document.getElementById('endDate').value);

            if (startDate && endDate && endDate >= startDate) {
                // Calculate the difference in days (inclusive)
                var timeDiff = endDate.getTime() - startDate.getTime();
                var dayDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)) + 1;
                document.getElementById('days').value = dayDiff;

                // Show validation message if needed
                var availableLeavesText = document.getElementById('availableLeaves').textContent;
                var availableCount = parseInt(availableLeavesText.match(/\d+/)[0]);

                if (dayDiff > availableCount) {
                    document.getElementById('days').style.borderColor = '#dc3545';
                    showAlert('warning', 'Requested days (' + dayDiff + ') exceed available leaves (' + availableCount + ')');
                } else {
                    document.getElementById('days').style.borderColor = '#28a745';
                }
            } else if (startDate && endDate && endDate < startDate) {
                showAlert('warning', 'End date cannot be before start date');
                document.getElementById('endDate').value = '';
                document.getElementById('days').value = '';
            }
        }

        // Submit leave request
        async function submitLeave() {
            var form = document.getElementById('addLeaveForm');
            var formData = new FormData(form);
            var data = Object.fromEntries(formData);

            // Validate form data
            if (!data.employee_id || !data.start_date || !data.end_date || !data.days || !data.reason) {
                showAlert('warning', 'Please fill in all required fields');
                return;
            }

            // Validate days is a positive number
            if (parseInt(data.days) <= 0) {
                showAlert('warning', 'Number of days must be greater than 0');
                return;
            }

            // Disable submit button to prevent double submission
            var submitBtn = document.querySelector('#addLeaveModal .btn-primary');
            var originalText = submitBtn.innerHTML;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Adding...';
            submitBtn.disabled = true;

            try {
                var response = await fetch('/dashboard/add-leave', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                var result = await response.json();

                if (result.success) {
                    bootstrap.Modal.getInstance(document.getElementById('addLeaveModal')).hide();
                    showAlert('success', result.message);
                    setTimeout(function () { location.reload(); }, 1500);
                } else {
                    showAlert('danger', result.error || 'Failed to add leave');
                }
            } catch (error) {
                console.error('Submit leave error:', error);
                showAlert('danger', 'An error occurred while adding leave. Please try again.');
            } finally {
                // Re-enable submit button
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }
        }

        // View employee details
        async function viewEmployeeDetails(employeeId) {
            try {
                var response = await fetch('/dashboard/employee/' + employeeId + '/leaves');
                var data = await response.json();

                if (data.employee) {
                    displayEmployeeDetails(data.employee, data.leaves);
                    new bootstrap.Modal(document.getElementById('employeeDetailsModal')).show();
                } else {
                    showAlert('danger', 'Employee not found');
                }
            } catch (error) {
                showAlert('danger', 'Error loading employee details');
                console.error('Error:', error);
            }
        }

        function displayEmployeeDetails(employee, leaves) {
            var usedLeaves = employee.total_leaves - employee.available_leaves;
            var usagePercentage = Math.round((usedLeaves / employee.total_leaves) * 100);

            var leavesHtml = '';
            if (leaves.length === 0) {
                leavesHtml = '<div class="text-center py-4"><i class="fas fa-calendar fa-2x text-muted mb-3"></i><p class="text-muted">No leave records found</p></div>';
            } else {
                leavesHtml = '<div class="table-responsive"><table class="table table-sm"><thead><tr><th>Date Range</th><th>Days</th><th>Reason</th><th>Status</th></tr></thead><tbody>';

                leaves.forEach(function (leave) {
                    var startDate = new Date(leave.start_date).toLocaleDateString();
                    var endDate = new Date(leave.end_date).toLocaleDateString();
                    var statusBadge = leave.status === 'approved' ? 'success' : 'warning';

                    leavesHtml += '<tr><td>' + startDate + ' - ' + endDate + '</td><td><span class="badge bg-primary">' + leave.days + '</span></td><td>' + leave.reason + '</td><td><span class="badge bg-' + statusBadge + '">' + leave.status + '</span></td></tr>';
                });

                leavesHtml += '</tbody></table></div>';
            }

            var content = '<div class="row mb-4"><div class="col-md-6"><h6 class="text-muted mb-2">Employee Information</h6><p><strong>Name:</strong> ' + employee.name + '</p><p><strong>Department:</strong> ' + employee.department + '</p><p><strong>Employee ID:</strong> ' + employee.id + '</p></div><div class="col-md-6"><h6 class="text-muted mb-2">Leave Summary</h6><div class="row text-center"><div class="col-4"><div class="bg-primary text-white p-2 rounded"><div class="h5 mb-0">' + employee.total_leaves + '</div><small>Total</small></div></div><div class="col-4"><div class="bg-success text-white p-2 rounded"><div class="h5 mb-0">' + employee.available_leaves + '</div><small>Available</small></div></div><div class="col-4"><div class="bg-danger text-white p-2 rounded"><div class="h5 mb-0">' + usedLeaves + '</div><small>Used</small></div></div></div><div class="mt-3"><div class="progress"><div class="progress-bar" style="width: ' + usagePercentage + '%">' + usagePercentage + '% Used</div></div></div></div></div><hr><h6 class="text-muted mb-3">Leave History</h6>' + leavesHtml;

            document.getElementById('employeeDetailsContent').innerHTML = content;
        }

        // Delete employee functionality
        var employeeToDelete = null;

        function deleteEmployee(employeeId, employeeName) {
            employeeToDelete = { id: employeeId, name: employeeName };

            document.getElementById('deleteEmployeeName').textContent = employeeName;
            document.getElementById('deleteEmployeeId').textContent = employeeId;

            new bootstrap.Modal(document.getElementById('deleteEmployeeModal')).show();
        }

        async function confirmDeleteEmployee() {
            if (!employeeToDelete) {
                showAlert('danger', 'No employee selected for deletion');
                return;
            }

            var confirmBtn = document.getElementById('confirmDeleteBtn');
            var originalText = confirmBtn.innerHTML;

            // Show loading state
            confirmBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Deleting...';
            confirmBtn.disabled = true;

            try {
                var response = await fetch('/dashboard/employee/' + employeeToDelete.id, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                var result = await response.json();

                if (result.success) {
                    bootstrap.Modal.getInstance(document.getElementById('deleteEmployeeModal')).hide();
                    showAlert('success', result.message);

                    // Remove the employee row from the table without full page reload
                    var employeeRow = document.querySelector('tr[onclick*="' + employeeToDelete.id + '"]');
                    if (employeeRow) {
                        employeeRow.style.transition = 'opacity 0.5s ease';
                        employeeRow.style.opacity = '0';
                        setTimeout(function () {
                            employeeRow.remove();
                            updateEmployeeCount();
                        }, 500);
                    }

                    employeeToDelete = null;
                } else {
                    showAlert('danger', result.error || 'Failed to delete employee');
                }
            } catch (error) {
                console.error('Delete employee error:', error);
                showAlert('danger', 'An error occurred while deleting the employee. Please try again.');
            } finally {
                // Reset button state
                confirmBtn.innerHTML = originalText;
                confirmBtn.disabled = false;
            }
        }

        // Update employee count in header
        function updateEmployeeCount() {
            var rows = document.querySelectorAll('tbody tr');
            var count = rows.length;
            var countElement = document.querySelector('.card-body h5');
            if (countElement) {
                countElement.innerHTML = '<i class="fas fa-clipboard-list me-2 text-primary"></i>Employee List (' + count + ' employees)';
            }

            // Show empty state if no employees left
            if (count === 0) {
                var tableContainer = document.querySelector('.card .card-body');
                tableContainer.innerHTML = '<div class="text-center py-5"><i class="fas fa-users fa-3x text-muted mb-3"></i><h5 class="text-muted">No employees found</h5><p class="text-muted">Import employees or add them manually to get started.</p><button class="btn btn-primary" onclick="importEmployees()"><i class="fas fa-plus me-2"></i>Add Employees</button></div>';
            }
        }

        // Import employees function
        function importEmployees() {
            new bootstrap.Modal(document.getElementById('importModal')).show();
        }

        function processImport() {
            var form = document.getElementById('importForm');
            var fileInput = document.getElementById('employeeFile');
            var importBtn = document.getElementById('importBtn');

            if (!fileInput.files[0]) {
                showAlert('warning', 'Please select a file to import');
                return;
            }

            // Show loading state
            importBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Processing...';
            importBtn.disabled = true;

            var formData = new FormData();
            formData.append('employeeFile', fileInput.files[0]);

            fetch('/upload/employees', {
                method: 'POST',
                body: formData
            })
                .then(function (response) { return response.json(); })
                .then(function (data) {
                    if (data.success) {
                        var message = data.message;
                        if (data.skipped > 0) {
                            message += ' (' + data.skipped + ' rows skipped due to errors)';
                        }
                        showAlert('success', message);

                        if (data.errors && data.errors.length > 0) {
                            console.log('Import errors:', data.errors);
                            showAlert('warning', 'Some rows had issues. Check console for details.');
                        }

                        bootstrap.Modal.getInstance(document.getElementById('importModal')).hide();
                        setTimeout(function () { location.reload(); }, 2000);
                    } else {
                        showAlert('danger', data.error || 'Import failed');
                    }
                })
                .catch(function (error) {
                    console.error('Import error:', error);
                    showAlert('danger', 'An error occurred during import');
                })
                .finally(function () {
                    // Reset button state
                    importBtn.innerHTML = '<i class="fas fa-upload me-2"></i>Import';
                    importBtn.disabled = false;
                });
        }

        // Show alert function
        function showAlert(type, message) {
            var iconClass = type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-triangle' : 'info-circle';
            var alertHtml = '<div class="alert alert-' + type + ' alert-dismissible fade show" role="alert"><i class="fas fa-' + iconClass + ' me-2"></i>' + message + '<button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>';

            // Insert alert at the top of the main container
            var container = document.querySelector('.container');
            var firstChild = container.firstElementChild;
            firstChild.insertAdjacentHTML('afterend', alertHtml);

            // Auto-dismiss after 5 seconds
            setTimeout(function () {
                var alert = document.querySelector('.alert');
                if (alert) {
                    var alertInstance = bootstrap.Alert.getInstance(alert);
                    if (alertInstance) alertInstance.close();
                }
            }, 5000);
        }

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function () {
            // Add hover effects for employee rows
            document.querySelectorAll('.employee-row').forEach(function (row) {
                row.addEventListener('mouseenter', function () {
                    this.style.backgroundColor = '#f8f9fa';
                });

                row.addEventListener('mouseleave', function () {
                    this.style.backgroundColor = '';
                });
            });
        });
    </script>
</body>

</html>